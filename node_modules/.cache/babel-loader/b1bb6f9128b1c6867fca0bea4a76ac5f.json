{"ast":null,"code":"var _jsxFileName = \"F:\\\\LINUX\\\\AF Lexicon 2022\\\\Code examples\\\\ReactOwnTest\\\\test1intro\\\\src\\\\components\\\\Tasks.js\",\n    _s = $RefreshSig$();\n\n// const tasks = [\n//     {\n//         id: 1,\n//         text: 'to do 1',\n//         day: 'Feb 5, 2022',\n//         reminder: 'true',\n//     },\n//     {\n//         id: 2,\n//         text: 'to do 2',\n//         day: 'Feb 5, 2022',\n//         reminder: 'true',\n//     },\n//     {\n//         id: 3,\n//         text: 'to do 3',\n//         day: 'Feb 5, 2022',\n//         reminder: 'false',\n//     },\n// ]\n// const Tasks = () => {\n//   return (\n//     <>\n// {tasks.map((task) => (\n// <h3 key={task.id}>{task.text}</h3>\n//     ))}\n//     </>\n//   )\n// }\n// export default Tasks\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = () => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: 'to do 1',\n    day: 'Feb 5, 2022',\n    reminder: 'true'\n  }, {\n    id: 2,\n    text: 'to do 2',\n    day: 'Feb 5, 2022',\n    reminder: 'true'\n  }, {\n    id: 3,\n    text: 'to do 3',\n    day: 'Feb 5, 2022',\n    reminder: 'false'\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.text\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 1\n    }, this))\n  }, void 0, false);\n};\n\n_s(Tasks, \"4QY1bcZP4yj4RvpABjg/mR+dR7w=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["useState","Tasks","tasks","setTasks","id","text","day","reminder","map","task"],"sources":["F:/LINUX/AF Lexicon 2022/Code examples/ReactOwnTest/test1intro/src/components/Tasks.js"],"sourcesContent":["// const tasks = [\r\n//     {\r\n//         id: 1,\r\n//         text: 'to do 1',\r\n//         day: 'Feb 5, 2022',\r\n//         reminder: 'true',\r\n//     },\r\n//     {\r\n//         id: 2,\r\n//         text: 'to do 2',\r\n//         day: 'Feb 5, 2022',\r\n//         reminder: 'true',\r\n//     },\r\n//     {\r\n//         id: 3,\r\n//         text: 'to do 3',\r\n//         day: 'Feb 5, 2022',\r\n//         reminder: 'false',\r\n//     },\r\n// ]\r\n\r\n// const Tasks = () => {\r\n//   return (\r\n//     <>\r\n// {tasks.map((task) => (\r\n// <h3 key={task.id}>{task.text}</h3>\r\n//     ))}\r\n//     </>\r\n//   )\r\n// }\r\n// export default Tasks\r\n\r\nimport { useState } from 'react'\r\n\r\nconst Tasks = () => {\r\n\r\nconst [tasks, setTasks] = useState([\r\n         {\r\n                id: 1,\r\n                text: 'to do 1',\r\n                day: 'Feb 5, 2022',\r\n                reminder: 'true',\r\n            },\r\n            {\r\n                id: 2,\r\n                text: 'to do 2',\r\n                day: 'Feb 5, 2022',\r\n                reminder: 'true',\r\n            },\r\n            {\r\n                id: 3,\r\n                text: 'to do 3',\r\n                day: 'Feb 5, 2022',\r\n                reminder: 'false',\r\n            },\r\n        ]\r\n)\r\n\r\n  return (\r\n    <>\r\n{tasks.map((task) => (\r\n<h3 key={task.id}>{task.text}</h3>\r\n    ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tasks\r\n\r\n"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAEpB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAC1B;IACOI,EAAE,EAAE,CADX;IAEOC,IAAI,EAAE,SAFb;IAGOC,GAAG,EAAE,aAHZ;IAIOC,QAAQ,EAAE;EAJjB,CAD0B,EAOvB;IACIH,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,SAFV;IAGIC,GAAG,EAAE,aAHT;IAIIC,QAAQ,EAAE;EAJd,CAPuB,EAavB;IACIH,EAAE,EAAE,CADR;IAEIC,IAAI,EAAE,SAFV;IAGIC,GAAG,EAAE,aAHT;IAIIC,QAAQ,EAAE;EAJd,CAbuB,CAAD,CAAlC;EAsBE,oBACE;IAAA,UACHL,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACX;MAAA,UAAmBA,IAAI,CAACJ;IAAxB,GAASI,IAAI,CAACL,EAAd;MAAA;MAAA;MAAA;IAAA,QADC;EADG,iBADF;AAOD,CA/BD;;GAAMH,K;;KAAAA,K;AAiCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}